// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Math.jack

/**
 * A library of commonly used mathematical functions.
 * Note: Jack compilers implement multiplication and division using OS method calls.
 */
class Math {
    static Array twoToThe;

    /** Initializes the library. */
    function void init() {
        var int i;
        let twoToThe = Array.new(16);
        while (i < 16) {
            let twoToThe[i] = Math.pow(2, i);
            let i = i + 1;
        }
        return;
    }

    function int pow(int base, int exp) {
        var int j, sum;

        let sum = 1; // 2^0 is 1 so skip this step
        let j = 1;
        while (j < exp) {
            let sum = sum * 2;
            let j = j + 1;
        }

        return sum;
    }

    /** Returns the absolute value of x. */
    function int abs(int x) {
        if (x < 0) {
            return x * -1;
        }
        else {
            return x;
        }
    }

    /** Returns the product of x and y. 
     *  When a Jack compiler detects the multiplication operator '*' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x*y and multiply(x,y) return the same value.
     */
    function int multiply(int x, int y) {
        var int sum, shiftedx, i;

        let sum = 0;
        let shiftedx = x;
        let i = 0;

        while (i < 16) { 
            if (Math.bit(y, i)) {
                let sum = sum + shiftedx;
            }
            
            let shiftedx = shiftedx * 2;

            let i = i + 1;
        }
        
        return sum;
    }

    /** Returns true if the ith bit of val is 1 */
    function boolean bit(int val, int i) {
        var String s;

        let s = String.new(16);
        do s.setInt(val);


        return s.charAt(i) = 49; // ascii for 1
    }

    /** Returns the integer part of x/y.
     *  When a Jack compiler detects the multiplication operator '/' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x/y and divide(x,y) return the same value.
     */
    function int divide(int x, int y) {
        return 0;
    }

    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) {
        return 0;
    }

    /** Returns the greater number. */
    function int max(int a, int b) {
        if (a > b) {
            return a;
        }
        else {
            return b;
        }
    }

    /** Returns the smaller number. */
    function int min(int a, int b) {
        if (a < b) {
            return a;
        }
        else {
            return b;
        }
    }
}

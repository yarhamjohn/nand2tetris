<class>
  <keyword> class </keyword>
  <identifier> Main </identifier>
  <symbol> { </symbol>
<classVarDec>
  <keyword> static </keyword>
  <keyword> boolean </keyword>
  <identifier> test </identifier>
  <symbol> ; </symbol>
<subroutineDec>
  <keyword> function </keyword>
  <keyword> void </keyword>
  <identifier> main </identifier>
  <symbol> ( </symbol>
  <parameterList>
  </parameterList>
  <symbol> { </symbol>
<subroutineDec>
  <keyword> var </keyword>
  <keyword> SquareGame </keyword>
  <identifier> game </identifier>
  <symbol> ; </symbol>
  <parameterList>
    <keyword> let </keyword>
    <identifier> game </identifier>
  </parameterList>
  <symbol> = </symbol>
<subroutineDec>
  <keyword> game </keyword>
  <keyword> ; </keyword>
  <identifier> do </identifier>
  <symbol> game </symbol>
  <parameterList>
    <keyword> . </keyword>
    <identifier> run </identifier>
  </parameterList>
  <symbol> ( </symbol>
<subroutineDec>
  <keyword> ) </keyword>
  <keyword> ; </keyword>
  <identifier> do </identifier>
  <symbol> game </symbol>
  <parameterList>
    <keyword> . </keyword>
    <identifier> dispose </identifier>
  </parameterList>
  <symbol> ( </symbol>
<subroutineDec>
  <keyword> ) </keyword>
  <keyword> ; </keyword>
  <identifier> return </identifier>
  <symbol> ; </symbol>
  <parameterList>
    <keyword> } </keyword>
    <identifier> function </identifier>
  </parameterList>
  <symbol> void </symbol>
</subroutineDec>
</subroutineDec>
</subroutineDec>
</subroutineDec>
</subroutineDec>
<subroutineDec>
  <keyword> function </keyword>
  <keyword> void </keyword>
  <identifier> main </identifier>
  <symbol> ( </symbol>
  <parameterList>
  </parameterList>
  <symbol> { </symbol>
<subroutineDec>
  <keyword> var </keyword>
  <keyword> SquareGame </keyword>
  <identifier> game </identifier>
  <symbol> ; </symbol>
  <parameterList>
    <keyword> let </keyword>
    <identifier> game </identifier>
  </parameterList>
  <symbol> = </symbol>
<subroutineDec>
  <keyword> game </keyword>
  <keyword> ; </keyword>
  <identifier> do </identifier>
  <symbol> game </symbol>
  <parameterList>
    <keyword> . </keyword>
    <identifier> run </identifier>
  </parameterList>
  <symbol> ( </symbol>
<subroutineDec>
  <keyword> ) </keyword>
  <keyword> ; </keyword>
  <identifier> do </identifier>
  <symbol> game </symbol>
  <parameterList>
    <keyword> . </keyword>
    <identifier> dispose </identifier>
  </parameterList>
  <symbol> ( </symbol>
<subroutineDec>
  <keyword> ) </keyword>
  <keyword> ; </keyword>
  <identifier> return </identifier>
  <symbol> ; </symbol>
  <parameterList>
    <keyword> } </keyword>
    <identifier> function </identifier>
  </parameterList>
  <symbol> void </symbol>
</subroutineDec>
</subroutineDec>
</subroutineDec>
</subroutineDec>
</subroutineDec>
</classVarDec>
<subroutineDec>
  <keyword> static </keyword>
  <keyword> boolean </keyword>
  <identifier> test </identifier>
  <symbol> ; </symbol>
  <parameterList>
    <keyword> function </keyword>
    <identifier> void </identifier>
  </parameterList>
  <symbol> main </symbol>
<subroutineDec>
  <keyword> ( </keyword>
  <keyword> ) </keyword>
  <identifier> { </identifier>
  <symbol> var </symbol>
  <parameterList>
    <keyword> SquareGame </keyword>
    <identifier> game </identifier>
  </parameterList>
  <symbol> ; </symbol>
<subroutineDec>
  <keyword> let </keyword>
  <keyword> game </keyword>
  <identifier> = </identifier>
  <symbol> game </symbol>
  <parameterList>
    <keyword> ; </keyword>
    <identifier> do </identifier>
  </parameterList>
  <symbol> game </symbol>
<subroutineDec>
  <keyword> . </keyword>
  <keyword> run </keyword>
  <identifier> ( </identifier>
  <symbol> ) </symbol>
  <parameterList>
    <keyword> ; </keyword>
    <identifier> do </identifier>
  </parameterList>
  <symbol> game </symbol>
<subroutineDec>
  <keyword> . </keyword>
  <keyword> dispose </keyword>
  <identifier> ( </identifier>
  <symbol> ) </symbol>
  <parameterList>
    <keyword> ; </keyword>
    <identifier> return </identifier>
  </parameterList>
  <symbol> ; </symbol>
<subroutineDec>
  <keyword> } </keyword>
  <keyword> function </keyword>
  <identifier> void </identifier>
  <symbol> more </symbol>
  <parameterList>
    <keyword> ( </keyword>
    <identifier> ) </identifier>
  </parameterList>
  <symbol> { </symbol>
</subroutineDec>
</subroutineDec>
</subroutineDec>
</subroutineDec>
</subroutineDec>
</subroutineDec>
<subroutineDec>
  <keyword> static </keyword>
  <keyword> boolean </keyword>
  <identifier> test </identifier>
  <symbol> ; </symbol>
  <parameterList>
    <keyword> function </keyword>
    <identifier> void </identifier>
  </parameterList>
  <symbol> main </symbol>
<subroutineDec>
  <keyword> ( </keyword>
  <keyword> ) </keyword>
  <identifier> { </identifier>
  <symbol> var </symbol>
  <parameterList>
    <keyword> SquareGame </keyword>
    <identifier> game </identifier>
  </parameterList>
  <symbol> ; </symbol>
<subroutineDec>
  <keyword> let </keyword>
  <keyword> game </keyword>
  <identifier> = </identifier>
  <symbol> game </symbol>
  <parameterList>
    <keyword> ; </keyword>
    <identifier> do </identifier>
  </parameterList>
  <symbol> game </symbol>
<subroutineDec>
  <keyword> . </keyword>
  <keyword> run </keyword>
  <identifier> ( </identifier>
  <symbol> ) </symbol>
  <parameterList>
    <keyword> ; </keyword>
    <identifier> do </identifier>
  </parameterList>
  <symbol> game </symbol>
<subroutineDec>
  <keyword> . </keyword>
  <keyword> dispose </keyword>
  <identifier> ( </identifier>
  <symbol> ) </symbol>
  <parameterList>
    <keyword> ; </keyword>
    <identifier> return </identifier>
  </parameterList>
  <symbol> ; </symbol>
<subroutineDec>
  <keyword> } </keyword>
  <keyword> function </keyword>
  <identifier> void </identifier>
  <symbol> more </symbol>
  <parameterList>
    <keyword> ( </keyword>
    <identifier> ) </identifier>
  </parameterList>
  <symbol> { </symbol>
</subroutineDec>
</subroutineDec>
</subroutineDec>
</subroutineDec>
</subroutineDec>
</subroutineDec>
</class>
<classVarDec>
  <keyword> class </keyword>
  <keyword> Main </keyword>
  <identifier> { </identifier>
  <symbol> static </symbol>
<subroutineDec>
  <keyword> boolean </keyword>
  <keyword> test </keyword>
  <identifier> ; </identifier>
  <symbol> function </symbol>
  <parameterList>
    <keyword> void </keyword>
    <identifier> main </identifier>
  </parameterList>
  <symbol> ( </symbol>
<subroutineDec>
  <keyword> ) </keyword>
  <keyword> { </keyword>
  <identifier> var </identifier>
  <symbol> SquareGame </symbol>
  <parameterList>
    <keyword> game </keyword>
    <identifier> ; </identifier>
  </parameterList>
  <symbol> let </symbol>
<subroutineDec>
  <keyword> game </keyword>
  <keyword> = </keyword>
  <identifier> game </identifier>
  <symbol> ; </symbol>
  <parameterList>
    <keyword> do </keyword>
    <identifier> game </identifier>
  </parameterList>
  <symbol> . </symbol>
<subroutineDec>
  <keyword> run </keyword>
  <keyword> ( </keyword>
  <identifier> ) </identifier>
  <symbol> ; </symbol>
  <parameterList>
    <keyword> do </keyword>
    <identifier> game </identifier>
  </parameterList>
  <symbol> . </symbol>
<subroutineDec>
  <keyword> dispose </keyword>
  <keyword> ( </keyword>
  <identifier> ) </identifier>
  <symbol> ; </symbol>
  <parameterList>
    <keyword> return </keyword>
    <identifier> ; </identifier>
  </parameterList>
  <symbol> } </symbol>
<subroutineDec>
  <keyword> function </keyword>
  <keyword> void </keyword>
  <identifier> more </identifier>
  <symbol> ( </symbol>
  <parameterList>
  </parameterList>
  <symbol> { </symbol>
</subroutineDec>
</subroutineDec>
</subroutineDec>
</subroutineDec>
</subroutineDec>
</subroutineDec>
<subroutineDec>
  <keyword> boolean </keyword>
  <keyword> test </keyword>
  <identifier> ; </identifier>
  <symbol> function </symbol>
  <parameterList>
    <keyword> void </keyword>
    <identifier> main </identifier>
  </parameterList>
  <symbol> ( </symbol>
<subroutineDec>
  <keyword> ) </keyword>
  <keyword> { </keyword>
  <identifier> var </identifier>
  <symbol> SquareGame </symbol>
  <parameterList>
    <keyword> game </keyword>
    <identifier> ; </identifier>
  </parameterList>
  <symbol> let </symbol>
<subroutineDec>
  <keyword> game </keyword>
  <keyword> = </keyword>
  <identifier> game </identifier>
  <symbol> ; </symbol>
  <parameterList>
    <keyword> do </keyword>
    <identifier> game </identifier>
  </parameterList>
  <symbol> . </symbol>
<subroutineDec>
  <keyword> run </keyword>
  <keyword> ( </keyword>
  <identifier> ) </identifier>
  <symbol> ; </symbol>
  <parameterList>
    <keyword> do </keyword>
    <identifier> game </identifier>
  </parameterList>
  <symbol> . </symbol>
<subroutineDec>
  <keyword> dispose </keyword>
  <keyword> ( </keyword>
  <identifier> ) </identifier>
  <symbol> ; </symbol>
  <parameterList>
    <keyword> return </keyword>
    <identifier> ; </identifier>
  </parameterList>
  <symbol> } </symbol>
<subroutineDec>
  <keyword> function </keyword>
  <keyword> void </keyword>
  <identifier> more </identifier>
  <symbol> ( </symbol>
  <parameterList>
  </parameterList>
  <symbol> { </symbol>
</subroutineDec>
</subroutineDec>
</subroutineDec>
</subroutineDec>
</subroutineDec>
</subroutineDec>
</classVarDec>
<subroutineDec>
  <keyword> class </keyword>
  <keyword> Main </keyword>
  <identifier> { </identifier>
  <symbol> static </symbol>
  <parameterList>
    <keyword> boolean </keyword>
    <identifier> test </identifier>
  </parameterList>
  <symbol> ; </symbol>
<subroutineDec>
  <keyword> function </keyword>
  <keyword> void </keyword>
  <identifier> main </identifier>
  <symbol> ( </symbol>
  <parameterList>
  </parameterList>
  <symbol> { </symbol>
<subroutineDec>
  <keyword> var </keyword>
  <keyword> SquareGame </keyword>
  <identifier> game </identifier>
  <symbol> ; </symbol>
  <parameterList>
    <keyword> let </keyword>
    <identifier> game </identifier>
  </parameterList>
  <symbol> = </symbol>
<subroutineDec>
  <keyword> game </keyword>
  <keyword> ; </keyword>
  <identifier> do </identifier>
  <symbol> game </symbol>
  <parameterList>
    <keyword> . </keyword>
    <identifier> run </identifier>
  </parameterList>
  <symbol> ( </symbol>
<subroutineDec>
  <keyword> ) </keyword>
  <keyword> ; </keyword>
  <identifier> do </identifier>
  <symbol> game </symbol>
  <parameterList>
    <keyword> . </keyword>
    <identifier> dispose </identifier>
  </parameterList>
  <symbol> ( </symbol>
<subroutineDec>
  <keyword> ) </keyword>
  <keyword> ; </keyword>
  <identifier> return </identifier>
  <symbol> ; </symbol>
  <parameterList>
    <keyword> } </keyword>
    <identifier> function </identifier>
  </parameterList>
  <symbol> void </symbol>
</subroutineDec>
</subroutineDec>
</subroutineDec>
</subroutineDec>
</subroutineDec>
<subroutineDec>
  <keyword> function </keyword>
  <keyword> void </keyword>
  <identifier> main </identifier>
  <symbol> ( </symbol>
  <parameterList>
  </parameterList>
  <symbol> { </symbol>
<subroutineDec>
  <keyword> var </keyword>
  <keyword> SquareGame </keyword>
  <identifier> game </identifier>
  <symbol> ; </symbol>
  <parameterList>
    <keyword> let </keyword>
    <identifier> game </identifier>
  </parameterList>
  <symbol> = </symbol>
<subroutineDec>
  <keyword> game </keyword>
  <keyword> ; </keyword>
  <identifier> do </identifier>
  <symbol> game </symbol>
  <parameterList>
    <keyword> . </keyword>
    <identifier> run </identifier>
  </parameterList>
  <symbol> ( </symbol>
<subroutineDec>
  <keyword> ) </keyword>
  <keyword> ; </keyword>
  <identifier> do </identifier>
  <symbol> game </symbol>
  <parameterList>
    <keyword> . </keyword>
    <identifier> dispose </identifier>
  </parameterList>
  <symbol> ( </symbol>
<subroutineDec>
  <keyword> ) </keyword>
  <keyword> ; </keyword>
  <identifier> return </identifier>
  <symbol> ; </symbol>
  <parameterList>
    <keyword> } </keyword>
    <identifier> function </identifier>
  </parameterList>
  <symbol> void </symbol>
</subroutineDec>
</subroutineDec>
</subroutineDec>
</subroutineDec>
</subroutineDec>
</subroutineDec>
<subroutineDec>
  <keyword> class </keyword>
  <keyword> Main </keyword>
  <identifier> { </identifier>
  <symbol> static </symbol>
  <parameterList>
    <keyword> boolean </keyword>
    <identifier> test </identifier>
  </parameterList>
  <symbol> ; </symbol>
<subroutineDec>
  <keyword> function </keyword>
  <keyword> void </keyword>
  <identifier> main </identifier>
  <symbol> ( </symbol>
  <parameterList>
  </parameterList>
  <symbol> { </symbol>
<subroutineDec>
  <keyword> var </keyword>
  <keyword> SquareGame </keyword>
  <identifier> game </identifier>
  <symbol> ; </symbol>
  <parameterList>
    <keyword> let </keyword>
    <identifier> game </identifier>
  </parameterList>
  <symbol> = </symbol>
<subroutineDec>
  <keyword> game </keyword>
  <keyword> ; </keyword>
  <identifier> do </identifier>
  <symbol> game </symbol>
  <parameterList>
    <keyword> . </keyword>
    <identifier> run </identifier>
  </parameterList>
  <symbol> ( </symbol>
<subroutineDec>
  <keyword> ) </keyword>
  <keyword> ; </keyword>
  <identifier> do </identifier>
  <symbol> game </symbol>
  <parameterList>
    <keyword> . </keyword>
    <identifier> dispose </identifier>
  </parameterList>
  <symbol> ( </symbol>
<subroutineDec>
  <keyword> ) </keyword>
  <keyword> ; </keyword>
  <identifier> return </identifier>
  <symbol> ; </symbol>
  <parameterList>
    <keyword> } </keyword>
    <identifier> function </identifier>
  </parameterList>
  <symbol> void </symbol>
</subroutineDec>
</subroutineDec>
</subroutineDec>
</subroutineDec>
</subroutineDec>
<subroutineDec>
  <keyword> function </keyword>
  <keyword> void </keyword>
  <identifier> main </identifier>
  <symbol> ( </symbol>
  <parameterList>
  </parameterList>
  <symbol> { </symbol>
<subroutineDec>
  <keyword> var </keyword>
  <keyword> SquareGame </keyword>
  <identifier> game </identifier>
  <symbol> ; </symbol>
  <parameterList>
    <keyword> let </keyword>
    <identifier> game </identifier>
  </parameterList>
  <symbol> = </symbol>
<subroutineDec>
  <keyword> game </keyword>
  <keyword> ; </keyword>
  <identifier> do </identifier>
  <symbol> game </symbol>
  <parameterList>
    <keyword> . </keyword>
    <identifier> run </identifier>
  </parameterList>
  <symbol> ( </symbol>
<subroutineDec>
  <keyword> ) </keyword>
  <keyword> ; </keyword>
  <identifier> do </identifier>
  <symbol> game </symbol>
  <parameterList>
    <keyword> . </keyword>
    <identifier> dispose </identifier>
  </parameterList>
  <symbol> ( </symbol>
<subroutineDec>
  <keyword> ) </keyword>
  <keyword> ; </keyword>
  <identifier> return </identifier>
  <symbol> ; </symbol>
  <parameterList>
    <keyword> } </keyword>
    <identifier> function </identifier>
  </parameterList>
  <symbol> void </symbol>
</subroutineDec>
</subroutineDec>
</subroutineDec>
</subroutineDec>
</subroutineDec>
</subroutineDec>
